@using ThueXeDapHoiAn.Areas.Client.Models.ViewModels
@model ChiTietCuaHangViewModel_Client
@{
    Layout = "~/Areas/Client/Views/Shared/_Layout.cshtml";
}

@section Styles {
<link rel="stylesheet" href="~/css/LayoutClient.css" />
<link rel="stylesheet" href="~/css/ChiTietCuaHang.css" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">

}
<style>
    .stars i {
        color: gold; /* hoặc #f5c518 */
        font-size: 1.2rem;
        margin-right: 2px;
    }
</style>
<div class="banner">
    <div>
        <div style="display: flex;">
            <h5 style="color: white;font-size: 20px;margin-left: 40px;">@Model.CuaHang.TenCuaHang</h5>
            @{
                var diem = Model.DiemTrungBinh ?? 0;
                var soSaoDay = (int)Math.Floor(diem);
                var coSaoLe = diem - soSaoDay >= 0.5;
                var soSaoTrong = 5 - soSaoDay - (coSaoLe ? 1 : 0);
            }
        </div>
        <div class="stars">
            @{
                double rating = Model.DiemTrungBinh ?? 0; // đề phòng null
                int fullStars = (int)Math.Floor(rating);
                bool hasHalfStar = (rating - fullStars) >= 0.25 && (rating - fullStars) < 0.75;
                int emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
            }

            <div style="margin-left:40px" class="stars text-warning">
                @for (int i = 0; i < fullStars; i++)
                {
                    <i class="fas fa-star"></i>  <!-- full star -->
                }
                @if (hasHalfStar)
                {
                    <i class="fas fa-star-half-alt"></i>  <!-- half star -->
                }
                @for (int i = 0; i < emptyStars; i++)
                {
                    <i class="far fa-star"></i>  <!-- empty star -->
                }
            </div>
        </div>
        <p style="margin-left: 40px;" class="text">
            @Model.CuaHang.GioiThieu
        </p>
        <div style="display: flex;gap:5px">
            <p style="color: white;margin-left: 40px;">Địa chỉ: @Model.CuaHang.DiaChi</p>
            <p style="color: white;margin-left: 30px;">SĐT liên hệ: @Model.CuaHang.SoDienThoai</p>
        </div>
    </div>
    <img src="~/images/CuaHang/@Model.CuaHang.HinhAnh" alt="Banner">
</div>

<main class="main-content">

    <vc:loai-xe></vc:loai-xe>

    <section class="bike-list">
        @foreach (var xe in Model.DanhSachXe)
        {
            <a asp-area="Client" asp-controller="XemChiTiet" asp-action="ChiTietXe" asp-route-id="@xe.IdXe">
                <div class="xe-card">
                    <img src="~/images/@xe.HinhAnh" alt="Xe đạp đua">
                    <div class="xe-card-body">
                        <p class="tenXe">@xe.TenXe</p>
                        <p class="moTa">@xe.GioiThieu</p>
                        <p class="gia">Giá thuê chỉ từ:</p>
                        <span>@xe.GiaThueTheoGio.ToString("N0") đ/chiếc</span>
                    </div>
                </div>
            </a>
        }

    </section>
</main>
@section Scripts {
    <script>
        const idCuaHang = new URLSearchParams(window.location.search).get("id");

        // Hàm dựng HTML của từng xe
        function createXeCard(xe) {
            return `
                <a href="/Client/ChiTietXe?id=${xe.idXe}">
                    <div class="xe-card">
                        <img src="/images/${xe.hinhAnh}" alt="${xe.tenXe}">
                        <div class="xe-card-body">
                            <p class="tenXe">${xe.tenXe}</p>
                            <p class="moTa">${xe.gioiThieu}</p>
                            <p class="gia">Giá thuê chỉ từ:</p>
                            <span>${Number(xe.giaThueTheoGio).toLocaleString()} đ/chiếc</span>
                        </div>
                    </div>
                </a>
            `;
        }

        async function fetchXeTheoLoai() {
            const checkedValues = Array.from(document.querySelectorAll(".filter-checkbox:checked"))
                .map(cb => cb.value);

            const url = new URL("/Client/XemChiTiet/GetXeTheoLoai", window.location.origin);
            if (idCuaHang) {
                url.searchParams.append("idCuaHang", idCuaHang);
            }

            checkedValues.forEach(id => url.searchParams.append("idLoaiXe", id));

            try {
                const res = await fetch(url.toString());
                if (!res.ok) throw new Error("Lỗi mạng: " + res.status);

                const data = await res.json();
                const container = document.querySelector(".bike-list");

                if (!container) {
                    console.error("Không tìm thấy phần tử .bike-list");
                    return;
                }

                container.innerHTML = "";

                if (data.length === 0) {
                    container.innerHTML = "<p>Không có xe phù hợp.</p>";
                    return;
                }

                container.innerHTML = data.map(createXeCard).join("");
            } catch (error) {
                console.error("Lỗi khi lấy dữ liệu xe:", error);
                const container = document.querySelector(".bike-list");
                if (container) {
                    container.innerHTML = "<p>Đã xảy ra lỗi khi tải dữ liệu xe. Vui lòng thử lại sau.</p>";
                }
            }
        }

        // Gắn sự kiện khi checkbox thay đổi
        document.addEventListener("DOMContentLoaded", () => {
            document.querySelectorAll(".filter-checkbox").forEach(cb => {
                cb.addEventListener("change", fetchXeTheoLoai);
            });

            fetchXeTheoLoai(); // Tải danh sách lần đầu khi trang được load
        });
    </script>


}


