@using ThueXeDapHoiAn.Areas.Client.Models.ViewModels
@model CuaHang_Xe_ViewModel_Client
@{
    Layout = "~/Areas/Client/Views/Shared/_Layout.cshtml";
}
@if (TempData["ThongBao"] != null)
{
    <div class="alert alert-warning" role="alert">
        @TempData["ThongBao"]
    </div>
}
@section Scripts {
    <script>
        setTimeout(function () {
            var alert = document.querySelector('.alert');
            if (alert) alert.style.display = 'none';
        }, 3000); // 5 giây
    </script>
    <script src='https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.js'></script>
    <script>
        mapboxgl.accessToken = 'pk.eyJ1IjoiaGFuaG9nYW4iLCJhIjoiY21iajcydzUyMGN4NjJqcTFnOWN2amQ4MSJ9.he4lo9oQTGFwphDygXxfsQ';

        // Hàm chuyển địa chỉ thành tọa độ
        function getCoordinatesFromAddress(address) {
            return fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${encodeURIComponent(address)}.json?access_token=${mapboxgl.accessToken}`)
                .then(res => res.json())
                .then(data => {
                    if (data.features.length > 0) {
                        const [lng, lat] = data.features[0].center;
                        return { lat, lng };
                    } else {
                        throw new Error("Không tìm thấy tọa độ");
                    }
                });
        }

        // Hàm tính khoảng cách và thời gian đi bộ
        function calculateDistanceAndTime(userLat, userLng, shopLat, shopLng, element) {
            fetch(`https://api.mapbox.com/directions/v5/mapbox/walking/${userLng},${userLat};${shopLng},${shopLat}?geometries=geojson&access_token=${mapboxgl.accessToken}`)
                .then(res => res.json())
                .then(data => {
                    const route = data.routes[0];
                    const distanceKm = (route.distance / 1000).toFixed(2);
                    const durationMin = Math.round(route.duration / 60);
                    element.innerText += `${distanceKm} km | ${durationMin} phút đi bộ`;
                })
                .catch(err => {
                    console.error("Lỗi khi tính khoảng cách:", err);
                });
        }

        // Lấy vị trí người dùng
        navigator.geolocation.getCurrentPosition(function(position) {
            const userLat = position.coords.latitude;
            const userLng = position.coords.longitude;

            // Duyệt qua các cửa hàng
            document.querySelectorAll('.shop-distance').forEach(el => {
                const address = el.dataset.address;

                getCoordinatesFromAddress(address)
                    .then(shopCoords => {
                        calculateDistanceAndTime(userLat, userLng, shopCoords.lat, shopCoords.lng, el);
                    })
                    .catch(err => {
                        console.warn(`Không thể lấy tọa độ cho địa chỉ "${address}":`, err.message);
                    });
            });

        }, function(error) {
            console.error("Không lấy được vị trí người dùng:", error.message);
        });
    </script>

}
@section Styles {
<link rel="stylesheet" href="~/css/LayoutClient.css" />
<link rel="stylesheet" href="~/css/IndexClient.css" />

}
<!-- Hero Section -->
<section class="hero-section">
    <div class="hero-content">
        <h1 class="hero-title">
            Hãy bắt đầu cuộc hành trình<br>
            khám phá phố cổ Hội An cùng<br>
            THUEXEDAPHOIAN
        </h1>
    </div>
</section>

<!-- Tab Section -->
<section class="tab-section">
    <div class="container">
        <div class="tab-container">
            <div class="tab-header">
                <button class="tab-button tab-button1 active" data-tab="ganToi">Gần tôi</button>
                <button class="tab-button tab-button2" data-tab="phoBien">Phổ biến</button>
                <button class="tab-button tab-button3" data-tab="danhGia">Đánh giá</button>
            </div>

            <div class="tab-content">
                <!-- Shop Listings -->
                @foreach (var item in Model.DanhSachCuaHang)
                {
                    <div class="shop-listing">
                    <div class="shop-image">
                        <img src="@item.HinhAnh" alt="Cửa hàng GIANT">
                    </div>
                    <div class="shop-details">
                        <h3 class="shop-name">@item.TenCuaHang</h3>
                        <p class="shop-description">@item.MoTa</p>
                        <div class="shop-rating">
                                @{
                                    double rating = item.DiemTrungBinh;
                                    int fullStars = (int)Math.Floor(rating);
                                    bool hasHalfStar = (rating - fullStars) >= 0.25 && (rating - fullStars) < 0.75;
                                    int emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
                                }

                                <div class="stars">
                                    @for (int i = 0; i < fullStars; i++)
                                    {
                                        <i class="fas fa-star"></i>  <!-- full star -->
                                    }
                                    @if (hasHalfStar)
                                    {
                                        <i class="fas fa-star-half-alt"></i>  <!-- half star -->
                                    }
                                    @for (int i = 0; i < emptyStars; i++)
                                    {
                                        <i class="far fa-star"></i>  <!-- empty star -->
                                    }
                                </div>
                                <span class="rating-score">@rating.ToString("0.0")</span>
                                
                        </div>
                        <p class="shop-distance" data-address="@item.DiaChi"></p>

                    </div>
                    <div class="shop-link">
                        <a asp-area="Client" asp-controller="XemChiTiet" asp-action="ChiTietCuaHang" asp-route-id="@item.IdCuaHang" class="details-link">Chi tiết <i class="fas fa-chevron-right"></i></a>
                    </div>
                </div>


                }
                <div class="view-all">
                    <a href="#" class="view-all-link">Tất cả các cửa hàng <i class="fas fa-chevron-right"></i></a>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Bike Carousel Section -->
<section class="bike-carousel-section">
    <div class="container">
        <div class="carousel-container">
            <div class="carousel-track">
                <!-- Bike Cards -->
                @foreach (var item in Model.DanhSachXe)
                {
                    <a asp-route-id="@item.IdXe" asp-action="ChiTietXe" asp-controller="XemChiTiet">
                        <div class="bike-card">
                            <div class="bike-image">
                                <img src="~/images/@item.HinhAnh" alt="Xe đạp đua">
                            </div>
                            <div class="bike-details">
                                <h3 class="bike-name">@item.TenXe</h3>
                                <p class="bike-description">@item.GioiThieu</p>
                                <p class="bike-price">Giá thuê chỉ từ</p>
                                <p class="bike-price">@item.GiaThueTheoGio.ToString("N0") đ/chiếc</p>
                            </div>
                        </div>
                    </a>
                }

                </div>

                <!-- Carousel Navigation -->
                <button class="carousel-nav prev-btn"><i class="fas fa-chevron-left"></i></button>
                <button class="carousel-nav next-btn"><i class="fas fa-chevron-right"></i></button>
            </div>
        </div>
    </section>