@model List<ThueXeDapHoiAn.Areas.Client.Models.XeModel_Client>
@{
    Layout = "~/Areas/Client/Views/Shared/_LayoutCuaHang.cshtml";
}


@section Styles {
    <link rel="stylesheet" href="~/css/LayoutClient.css" />
}
<header>
    <nav class="main-nav">
        <a asp-area="Client" asp-controller="CuaHang" asp-action="ThongTinCuaHang">Thông tin cửa hàng</a>
        <a asp-area="Client" asp-controller="CuaHang" asp-action="DanhSachXe" class="active">Quản lý xe</a>
        <a asp-area="Client" asp-controller="CuaHang" asp-action="DonThueChoDuyet">Quản lý đơn thuê</a>
        <a asp-area="Client" asp-controller="CuaHang" asp-action="BaoCao">Báo cáo</a>
        <a asp-area="Client" asp-controller="CuaHang" asp-action="DanhSachKhuyenMai">Khuyến mãi</a>
        <a asp-area="Client" asp-controller="CuaHang" asp-action="NhanTinShop">Nhắn tin</a>
    </nav>
</header>
<style>
    .alert {
        display: inline-block;
        margin-bottom: 12px;
        padding: 8px 18px;
        border-radius: 6px;
        font-size: 15px;
        font-weight: 500;
        box-shadow: 0 2px 8px rgba(0,0,0,0.04);
        max-width: 100%;
    }

    .alert-danger {
        background: #ffeaea;
        color: #d93025;
        border: 1px solid #f5c2c7;
    }

    .alert-success {
        background: #eaffea;
        color: #218838;
        border: 1px solid #b7ebc6;
    }
</style>


<!-- WRAPPER -->
<div class="wrapper_cuahang">
    <aside>
        <h3>Quản lý</h3>
        <nav>
            <a class="active">Danh sách xe</a>
            <a asp-area="Client" asp-controller="CuaHang" asp-action="ThemXe">Thêm xe</a>
            <a asp-area="Client" asp-controller="CuaHang" asp-action="DanhSachLoaiXe">Loại xe</a>
        </nav>
    </aside>

    <div class="content_cuahang">
        <div class="container_cuahang">
            <h2>Danh sách xe đạp</h2>
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
            }
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">@TempData["SuccessMessage"]</div>
            }
            <input type="text" id="searchInput" placeholder="Tìm theo tên xe..." />
            <div style="margin:10px 0;">
                <label for="sortColumn">Sắp xếp theo: </label>
                <select id="sortColumn">
                    <option value="id" selected>ID</option>
                    <option value="giaGio">Giá thuê theo giờ</option>
                    <option value="giaNgay">Giá thuê theo ngày</option>
                    <option value="soLuong">Số lượng</option>
                </select>

                <label for="sortOrder" style="margin-left:20px;">Thứ tự: </label>
                <select id="sortOrder">
                    <option value="asc">Từ thấp đến cao</option>
                    <option value="desc">Từ cao đến thấp</option>
                </select>
            </div>


            <table>
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Loại xe</th>
                        <th>Tên xe</th>
                        <th>Giá thuê theo giờ</th>
                        <th>Giá thuê theo ngày</th>
                        <th>Số lượng</th>
                        <th>Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var xe in Model)
                    {
                        <tr data-tenxe="@xe.TenXe.ToLower()" data-loaixe="@xe.LoaiXe?.TenLoaiXe.ToLower()">
                            <td>@xe.IdXe</td>
                            <td>@xe.LoaiXe?.TenLoaiXe</td>
                            <td>@xe.TenXe</td>
                            <td>@string.Format("{0:N0} VND", xe.GiaThueTheoGio)</td>
                            <td>@string.Format("{0:N0} VND", xe.GiaThueTheoNgay)</td>
                            <td>@xe.SoLuong</td>
                            <td>
                                <a href="@Url.Action("SuaXe", "CuaHang", new { area = "Client", id = xe.IdXe })">
                                    <i class="fa-solid fa-pen"></i>
                                </a>
                                <a href="@Url.Action("XoaXe", "CuaHang", new { area = "Client", id = xe.IdXe })" onclick="return confirm('Bạn có chắc chắn muốn xóa xe này?')">
                                    <i class="fa-solid fa-trash"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchInput = document.getElementById('searchInput');
            const sortColumn = document.getElementById('sortColumn');
            const sortOrder = document.getElementById('sortOrder');
            const tbody = document.querySelector('tbody');

            const allRows = Array.from(tbody.querySelectorAll('tr')); // ✅ Lưu toàn bộ dòng gốc

            function parseMoney(str) {
                return parseInt(str.replace(/[^\d]/g, '')) || 0;
            }

            function filterAndSortTable() {
                const searchTerm = searchInput.value.toLowerCase();

                // ✅ luôn bắt đầu từ allRows (dòng gốc)
                let filteredRows = allRows.filter(row => {
                    const tenXe = row.getAttribute('data-tenxe') || '';
                    return tenXe.includes(searchTerm);
                });

                filteredRows.sort((a, b) => {
                    let aVal, bVal;

                    switch (sortColumn.value) {
                        case 'id':
                            aVal = parseInt(a.cells[0].textContent) || 0;
                            bVal = parseInt(b.cells[0].textContent) || 0;
                            break;
                        case 'giaGio':
                            aVal = parseMoney(a.cells[3].textContent);
                            bVal = parseMoney(b.cells[3].textContent);
                            break;
                        case 'giaNgay':
                            aVal = parseMoney(a.cells[4].textContent);
                            bVal = parseMoney(b.cells[4].textContent);
                            break;
                        case 'soLuong':
                            aVal = parseInt(a.cells[5].textContent) || 0;
                            bVal = parseInt(b.cells[5].textContent) || 0;
                            break;
                        default:
                            aVal = 0;
                            bVal = 0;
                    }

                    return sortOrder.value === 'asc' ? aVal - bVal : bVal - aVal;
                });

                // Xoá hết dòng cũ
                tbody.innerHTML = '';

                // Thêm dòng đã lọc + sắp xếp vào lại
                filteredRows.forEach(row => tbody.appendChild(row));
            }

            // Gắn sự kiện
            [searchInput, sortColumn, sortOrder].forEach(el => {
                el.addEventListener('input', filterAndSortTable);
            });

            // Gọi hàm lần đầu khi load
            filterAndSortTable();
        });
    </script>

}