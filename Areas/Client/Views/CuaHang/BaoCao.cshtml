@model ThueXeDapHoiAn.Areas.Client.Models.ViewModels.BaoCaoViewModel
@using System.Text.Json

@{
    Layout = "~/Areas/Client/Views/Shared/_LayoutCuaHang.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/LayoutClient.css" />
    <link rel="stylesheet" href="~/css/BaoCao.css" />
    <style>
        .filter-bar-wrapper {
            width: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 80px;
            margin-top: 32px; /* Thêm dòng này để cách header */
            margin-bottom: 28px;
        }

        .filter-bar-form {
            display: flex;
            gap: 24px;
            background: #f8f9fa;
            border-radius: 12px;
            padding: 18px 24px;
            box-shadow: 0 2px 8px #0001;
            align-items: center;
            flex-wrap: wrap;
        }

            .filter-bar-form > div {
                display: flex;
                flex-direction: column;
                min-width: 150px;
            }

        media (max-width: 700px) {
            .filter-bar-form

        {
            flex-direction: column;
            gap: 12px;
            padding: 12px 6px;
        }

        .filter-bar-form > div {
            min-width: 100px;
        }

        }
    </style>
}

<header>
    <nav class="main-nav">
        <a asp-area="Client" asp-controller="CuaHang" asp-action="ThongTinCuaHang">Thông tin cửa hàng</a>
        <a asp-area="Client" asp-controller="CuaHang" asp-action="DanhSachXe">Quản lý xe</a>
        <a asp-area="Client" asp-controller="CuaHang" asp-action="DonThueChoDuyet">Quản lý đơn thuê</a>
        <a asp-area="Client" asp-controller="CuaHang" asp-action="BaoCao" class="active">Báo cáo</a>
        <a asp-area="Client" asp-controller="CuaHang" asp-action="DanhSachKhuyenMai" >Khuyến mãi</a>
        <a asp-area="Client" asp-controller="CuaHang" asp-action="NhanTinShop">Nhắn tin</a>
    </nav>
</header>

@{
    var now = DateTime.Now;
    int selectedMonth = Context.Request.Query["month"].Count > 0 ? int.Parse(Context.Request.Query["month"]) : now.Month;
    int selectedYear = Context.Request.Query["year"].Count > 0 ? int.Parse(Context.Request.Query["year"]) : now.Year;
    int currentYear = now.Year;
}
<div class="filter-bar-wrapper">
    <form method="get" asp-action="BaoCao" class="filter-bar-form">
        <div>
            <label for="monthSelect" class="form-label mb-1" style="font-weight:500;">
                <i class="fa-regular fa-calendar"></i> Chọn tháng
            </label>
            <select id="monthSelect" name="month" class="form-select" style="width:130px;">
                @for (int m = 1; m <= 12; m++)
                {
                    if (m == selectedMonth)
                    {
                        <option value="@m" selected="selected">Tháng @m</option>
                    }
                    else
                    {
                        <option value="@m">Tháng @m</option>
                    }
                }
            </select>
        </div>
        <div>
            <label for="yearSelect" class="form-label mb-1" style="font-weight:500;">
                <i class="fa-regular fa-calendar-days"></i> Chọn năm
            </label>
            <select id="yearSelect" name="year" class="form-select" style="width:130px;">
                @for (int y = currentYear - 5; y <= currentYear; y++)
                {
                    if (y == selectedYear)
                    {
                        <option value="@y" selected="selected">@y</option>
                    }
                    else
                    {
                        <option value="@y">@y</option>
                    }
                }
            </select>
        </div>
        <div style="align-self: flex-end;">
            <button type="submit" class="btn btn-success px-4" style="margin-top: 8px;">
                <i class="fa-solid fa-magnifying-glass"></i> Xem báo cáo
            </button>
        </div>
    </form>
</div>

<div class="wrapper_cuahang">
    <div class="thongkecontainer animate-fade-in">
        <!-- Stats Grid -->
        <div class="stats-grid">
            <div class="stat-card">
                <img class="icon" src="~/images/thongke/placeholder.gif" alt="Bike Icon" />
                <div class="label">Số xe của shop</div>
                <div class="value" id="accountCount"></div>
            </div>
            <div class="stat-card">
                <img class="icon" src="~/images/thongke/bike.gif" alt="Bike Icon" />
                <div class="label">Số xe đã được thuê</div>
                <div class="value" id="vehicleCount"></div>
            </div>
            <div class="stat-card">
                <img class="icon" src="~/images/thongke/order.gif" alt="Bike Icon" />
                <div class="label">Số đơn đã được thuê</div>
                <div class="value" id="storeCount"></div>
            </div>
            <div class="stat-card">
                <img class="icon" src="~/images/thongke/analytics.gif" alt="Bike Icon" />
                <div class="label">Tổng doanh thu tháng này</div>
                <div class="value" id="monthlyRevenue"></div>
            </div>
        </div>
        <!-- Dashboard Grid -->
        <div class="dashboard-grid">
            <!-- Store Revenue Chart -->
            <div class="chart-container">
                <div class="chart-title">Doanh Thu Của Cửa Hàng Theo Ngày</div>
                <canvas id="storeRevenueChart"></canvas>
            </div>
            <!-- Vehicle Revenue Pie Chart -->
            <div class="chart-container">
                <div class="chart-title">Doanh Thu Các Loại Xe</div>
                <canvas id="vehicleRevenueChart"></canvas>
            </div>

            <!-- Vehicle Ranking Table -->
            <div class="table-container">
                <div class="chart-title">Doanh thu của các xe</div>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Hạng</th>
                            <th>Tên xe</th>
                            <th>Doanh thu</th>
                        </tr>
                    </thead>
                    <tbody id="vehicleRankingTable">
                        <!-- Data will be populated by JavaScript -->
                    </tbody>
                </table>
            </div>

            <div class="table-container">
                <div class="chart-title">Top 10 Người Dùng Theo Tổng Tiền Thuê</div>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Hạng</th>
                            <th>Tên người dùng</th>
                            <th>Tổng tiền thuê</th>
                        </tr>
                    </thead>
                    <tbody id="topStoresTable">
                        <!-- Data will be populated by JavaScript -->
                    </tbody>
                </table>
            </div>

        </div>

    </div>
</div>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Truyền dữ liệu chi tiết loại xe từ backend sang JS
        const chiTietTheoLoaiXe = @Html.Raw(ViewBag.ChiTietTheoLoaiXe ?? "[]");

        // Tạo object data đầy đủ từ model để JS dùng chung
        const data = {
            soXe: @Model.SoXe,
            soXeDaThue: @Model.SoXeDaThue,
            soDonDaThue: @Model.SoDonDaThue,
            doanhThuThangNay: @Model.DoanhThuThangNay.ToString(System.Globalization.CultureInfo.InvariantCulture),
            doanhThuTheoNgay: @Html.Raw(Json.Serialize(Model.DoanhThuTheoNgay)),
            doanhThuTheoLoaiXe: @Html.Raw(Json.Serialize(Model.DoanhThuTheoLoaiXe)),
            doanhThuCacXe: @Html.Raw(Json.Serialize(Model.DoanhThuCacXe)),
            topNguoiDung: @Html.Raw(Json.Serialize(Model.TopNguoiDung))
        };

        document.addEventListener("DOMContentLoaded", () => {
            document.getElementById("accountCount").innerText = data.soXe;
            document.getElementById("vehicleCount").innerText = data.soXeDaThue;
            document.getElementById("storeCount").innerText = data.soDonDaThue;
            document.getElementById("monthlyRevenue").innerText = Number(data.doanhThuThangNay).toLocaleString("vi-VN") + " ₫";

            // Tính tổng doanh thu các loại xe
            const totalRevenue = data.doanhThuTheoLoaiXe.reduce((sum, item) => sum + item.doanhThu, 0);

            // Vẽ biểu đồ doanh thu theo loại xe (Pie)
            const vehicleTypeCtx = document.getElementById("vehicleRevenueChart").getContext("2d");
            const vehicleTypeChart = new Chart(vehicleTypeCtx, {
                type: "pie",
                data: {
                    labels: data.doanhThuTheoLoaiXe.map(x => x.loaiXe),
                    datasets: [{
                        data: data.doanhThuTheoLoaiXe.map(x => x.doanhThu),
                        backgroundColor: ["#FF6384", "#36A2EB", "#FFCE56", "#9CCC65", "#FFA726"]
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    const label = context.label || "";
                                    const value = context.raw;
                                    const percent = totalRevenue > 0 ? ((value / totalRevenue) * 100).toFixed(2) : 0;
                                    return `${label}: ${value.toLocaleString('vi-VN')} VNĐ (${percent}%)`;
                                }
                            }
                        },
                        legend: {
                            position: 'bottom',
                            labels: {
                                usePointStyle: true
                            }
                        }
                    },
                    onClick: (evt, elements) => {
                        if (elements.length > 0) {
                            const idx = elements[0].index;
                            const loaiXe = data.doanhThuTheoLoaiXe[idx].loaiXe;
                            const chiTiet = chiTietTheoLoaiXe.filter(x => x.LoaiXe === loaiXe);
                            let html = "";
                            chiTiet.forEach(item => {
                            html += `<tr>
                                <td>${item.TenNguoiDat}</td>
                                <td>${item.TenXe}</td> <!-- Thêm dòng này -->
                                <td>${item.LoaiXe}</td>
                                <td>${Number(item.TongTien).toLocaleString("vi-VN")} ₫</td>
                            </tr>`;
                        });
                            document.getElementById("popupLoaiXeTitle").innerText = "Danh sách người đặt - " + loaiXe;
                            document.getElementById("popupLoaiXeBody").innerHTML = html || "<tr><td colspan='3'>Không có dữ liệu</td></tr>";
                            document.getElementById("popupLoaiXe").style.display = "block";
                        }
                    }
                }
            });
                    const storeRevenueCtx = document.getElementById("storeRevenueChart").getContext("2d");
        const labels = data.doanhThuTheoNgay.map(x => x.ngay || x.Ngay);
        const values = data.doanhThuTheoNgay.map(x => x.doanhThu ?? x.DoanhThu);

        const storeRevenueChart = new Chart(storeRevenueCtx, {
            type: "line",
            data: {
                labels: labels,
                datasets: [{
                    label: "Doanh thu (VNĐ)",
                    data: values,
                    borderColor: "#36A2EB",
                    backgroundColor: "rgba(54,162,235,0.1)",
                    fill: true,
                    tension: 0.3,
                    pointRadius: 3
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { display: false },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return context.parsed.y.toLocaleString("vi-VN") + " ₫";
                            }
                        }
                    }
                },
                scales: {
                    x: { title: { display: true, text: "Ngày" } },
                    y: { title: { display: true, text: "Doanh thu (VNĐ)" }, beginAtZero: true }
                }
            }
        });

                const chiTietTheoNgay = @Html.Raw(ViewBag.ChiTietTheoNgay ?? "{}");

        storeRevenueChart.options.onClick = function(evt, elements) {
            if (elements.length > 0) {
                const idx = elements[0].index;
                const ngay = labels[idx];
                const chiTiet = chiTietTheoNgay[ngay] || [];
                let html = "";
                chiTiet.forEach(item => {
                    html += `<tr>
                        <td>${item.TenNguoiDat}</td>
                        <td>${item.TenXe}</td>
                        <td>${item.LoaiXe}</td>
                        <td>${item.SoLuong}</td>
                        <td>${Number(item.TongTien).toLocaleString("vi-VN")} ₫</td>
                    </tr>`;
                });
                document.getElementById("popupNgayTitle").innerText = "Danh sách đơn thuê ngày " + ngay;
                document.getElementById("popupNgayBody").innerHTML = html || "<tr><td colspan='5'>Không có dữ liệu</td></tr>";
                document.getElementById("popupNgay").style.display = "block";
            }
        };

            // Bảng doanh thu các xe
            const rankingTable = document.getElementById("vehicleRankingTable");
            data.doanhThuCacXe.forEach((item, index) => {
                const row = `
                    <tr>
                        <td>${index + 1}</td>
                        <td>${item.tenXe}</td>
                        <td>${Number(item.doanhThu).toLocaleString("vi-VN")} ₫</td>
                    </tr>`;
                rankingTable.insertAdjacentHTML("beforeend", row);
            });

            // Bảng top người dùng
            const topUsersTable = document.getElementById("topStoresTable");
            data.topNguoiDung.forEach((item, index) => {
                const row = `
                    <tr>
                        <td>${index + 1}</td>
                        <td>${item.tenNguoiDung}</td>
                        <td>${Number(item.tongTienThue).toLocaleString("vi-VN")} ₫</td>
                    </tr>`;
                topUsersTable.insertAdjacentHTML("beforeend", row);
            });
        });
    </script>
}
<div id="popupLoaiXe" class="modal" style="display:none;position:fixed;z-index:9999;left:0;top:0;width:100vw;height:100vh;background:#0005;">
    <div style="background:#fff;max-width:600px;margin:60px auto;padding:24px;border-radius:12px;position:relative;">
        <button onclick="document.getElementById('popupLoaiXe').style.display='none'" style="position:absolute;top:8px;right:12px;font-size:20px;background:none;border:none;">&times;</button>
        <h4 id="popupLoaiXeTitle"></h4>
        <table class="table">
            <thead>
                <tr>
                    <th>Người đặt</th>
                    <th>Tên xe</th>
                    <th>Loại xe</th>
                    <th>Tổng tiền</th>
                </tr>
            </thead>
            <tbody id="popupLoaiXeBody"></tbody>
        </table>
    </div>
</div>

<div id="popupNgay" class="modal" style="display:none;position:fixed;z-index:9999;left:0;top:0;width:100vw;height:100vh;background:#0005;">
    <div style="background:#fff;max-width:650px;margin:60px auto;padding:24px;border-radius:12px;position:relative;">
        <button onclick="document.getElementById('popupNgay').style.display='none'" style="position:absolute;top:8px;right:12px;font-size:20px;background:none;border:none;">&times;</button>
        <h4 id="popupNgayTitle"></h4>
        <table class="table">
            <thead>
                <tr>
                    <th>Tên người đặt</th>
                    <th>Tên xe</th>
                    <th>Loại xe</th>
                    <th>Số lượng</th>
                    <th>Thành tiền</th>
                </tr>
            </thead>
            <tbody id="popupNgayBody"></tbody>
        </table>
    </div>
</div>