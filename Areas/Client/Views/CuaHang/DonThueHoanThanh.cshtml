@model IEnumerable<ThueXeDapHoiAn.Areas.Client.Models.DonThueModel_Client>
@{
    Layout = "~/Areas/Client/Views/Shared/_LayoutCuaHang.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/LayoutClient.css" />
}
<header>
    <nav class="main-nav">
        <a asp-area="Client" asp-controller="CuaHang" asp-action="ThongTinCuaHang">Thông tin cửa hàng</a>
        <a asp-area="Client" asp-controller="CuaHang" asp-action="DanhSachXe">Quản lý xe</a>
        <a asp-area="Client" asp-controller="CuaHang" asp-action="DonThueChoDuyet" class="active">Quản lý đơn thuê</a>
        <a asp-area="Client" asp-controller="CuaHang" asp-action="BaoCao">Báo cáo</a>
        <a asp-area="Client" asp-controller="CuaHang" asp-action="DanhSachKhuyenMai">Khuyến mãi</a>
        <a asp-area="Client" asp-controller="CuaHang" asp-action="NhanTinShop">Nhắn tin</a>
    </nav>
</header>
<!-- WRAPPER -->
<div class="wrapper_cuahang">
    <aside>
        <h3>Quản lý</h3>
        <nav>
            <a asp-area="Client" asp-controller="CuaHang" asp-action="DonThueChoDuyet">Chờ duyệt</a>
            <a asp-area="Client" asp-controller="CuaHang" asp-action="DonThueDaDuyet">Đã duyệt</a>
            <a asp-area="Client" asp-controller="CuaHang" asp-action="DonThueDaHuy">Đã huỷ</a>
            <a class="active">Hoàn thành</a>
        </nav>
    </aside>

    <div class="content_cuahang">
        <div class="container_cuahang">
            <h2>Danh sách đơn hoàn thành</h2>
            <input type="text" id="searchInput" placeholder="Tìm theo tên hoặc id" style="margin: 10px 0;" />

            <label for="sortColumn">Sắp xếp theo:</label>
            <select id="sortColumn">
                <option value="id">ID đơn</option>
                <option value="tongTien">Tổng tiền</option>
            </select>
            <select id="sortOrder">
                <option value="asc">Tăng dần</option>
                <option value="desc">Giảm dần</option>
            </select>

            <table>
                <thead>
                    <tr>
                        <th>ID đơn thuê</th>
                        <th>Tên khách hàng</th>
                        <th>Loại xe đặt</th>
                        <th>Số giờ/ngày thuê</th>
                        <th>Ngày trả</th>
                        <th>Tổng tiền</th>
                        <th>Trạng thái</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var don in Model)
                    {
                        var chiTietList = (IEnumerable<dynamic>)don.ChiTietDonThue;
                        var thoiGianThue = (don.NgayTraXe - don.NgayNhanXe).TotalHours;
                        bool tinhTheoNgay = thoiGianThue > 23;
                        var soNgay = (int)Math.Ceiling((don.NgayTraXe - don.NgayNhanXe).TotalDays);
                        var soGio = (int)Math.Ceiling(thoiGianThue);

                        var xeInfo = string.Join("<br/>", chiTietList.Select(ct =>
                        $"{ct.Xe.TenXe} x{ct.SoLuong}"
                        ));

                        var soGioNgay = tinhTheoNgay ? soNgay + " ngày" : soGio + " giờ";

                        decimal tongTien = 0;
                        foreach (var ct in chiTietList)
                        {
                            if (tinhTheoNgay)
                            {
                                tongTien += (ct.GiaThueTheoNgay ?? 0) * ct.SoLuong * soNgay;
                            }
                            else
                            {
                                tongTien += (ct.GiaThueTheoGio ?? 0) * ct.SoLuong * soGio;
                            }
                        }

                        if (don.KhuyenMai != null && don.KhuyenMai.MucGiamGia > 0)
                        {
                            tongTien = tongTien * (1 - Convert.ToDecimal(don.KhuyenMai.MucGiamGia));
                        }

                        <tr style="cursor:pointer;"
                            onclick="window.location.href='@Url.Action("ChiTietDonThue", "CuaHang", new { area = "Client", id = don.IdDonThue })'"
                            data-khachhang="@don.User.Ten.ToLower()"
                            data-tongtien="@tongTien"
                            data-id="@don.IdDonThue">
                            <td>@don.IdDonThue</td>
                            <td>@don.User.Ten</td>
                            <td>@Html.Raw(xeInfo)</td>
                            <td>@soGioNgay</td>
                            <td>@don.NgayTraXe.ToString("HH\\h dd/MM/yyyy")</td>
                            <td>@string.Format("{0:N0} VND", @tongTien)</td>
                            <td>Hoàn thành <i class="fa-solid fa-check-circle" style="color: green;"></i></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchInput = document.getElementById('searchInput');
            const sortColumn = document.getElementById('sortColumn');
            const sortOrder = document.getElementById('sortOrder');
            const tbody = document.querySelector('tbody');

            // Lưu toàn bộ dòng gốc
            const allRows = Array.from(tbody.querySelectorAll('tr'));

            function filterAndSortTable() {
                const searchTerm = searchInput.value.toLowerCase().trim();

                // Lọc từ allRows
                let filteredRows = allRows.filter(row => {
                    const khachHang = row.getAttribute('data-khachhang') || '';
                    const id = row.getAttribute('data-id') || '';
                    return khachHang.includes(searchTerm) || id.includes(searchTerm);
                });

                // Sắp xếp
                filteredRows.sort((a, b) => {
                    let aVal = 0, bVal = 0;

                    if (sortColumn.value === 'id') {
                        aVal = parseInt(a.getAttribute('data-id'));
                        bVal = parseInt(b.getAttribute('data-id'));
                    } else if (sortColumn.value === 'tongTien') {
                        aVal = parseFloat(a.getAttribute('data-tongtien'));
                        bVal = parseFloat(b.getAttribute('data-tongtien'));
                    }

                    return sortOrder.value === 'asc' ? aVal - bVal : bVal - aVal;
                });

                // Làm sạch và render lại bảng
                tbody.innerHTML = '';
                filteredRows.forEach(row => tbody.appendChild(row));
            }


            // Gắn sự kiện
            [searchInput, sortColumn, sortOrder].forEach(el => {
                el.addEventListener('input', filterAndSortTable);
                el.addEventListener('change', filterAndSortTable);
            });

            filterAndSortTable(); // Gọi khi load
        });
    </script>
}
